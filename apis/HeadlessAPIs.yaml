openapi: 3.0.1
servers:
    - url: "https://staging.crossmint.com/api"
      description: "Staging environment (testnets)"
      x-fern-server-name: Staging
    - url: "https://www.crossmint.com/api"
      description: "Production environment (mainnets)"
      x-fern-server-name: Production
info:
    description: |
        N/A
    version: 1.0.0
    title: Headless Checkout
    contact:
        name: Crossmint Headless NFT Checkout APIs
        url: "https://www.crossmint.com"
        email: support@crossmint.io
tags:
    - name: Headless Checkout
      description: APIs to use the headless checkout

paths:
    ################################################
    ### HEADLESS
    ################################################

    /2022-06-09/orders:
        # CREATE ORDER
        post:
            summary: Create Order
            description: Creates a new order that can be used to complete a headless checkout.
            operationId: create-order
            security:
                - apiKey: []
            tags:
                - Headless
            x-fern-sdk-group-name: checkout
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            additionalProperties: false
                            required:
                                - payment
                                - lineItems
                            properties:
                                recipient:
                                    $ref: "#/components/schemas/Recipient"
                                locale:
                                    $ref: "#/components/schemas/Locale"
                                payment:
                                    $ref: "#/components/schemas/Payment"
                                lineItems:
                                    $ref: "#/components/schemas/LineItems"
            responses:
                201:
                    description: "Order successfully created."
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CreateOrderResponse"
                400:
                    description: Invalid arguments, please make sure you're following the api specification.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error400Response"
                403:
                    description: Forbidden error, please ensure the credentials are correct.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error403Response"
                404:
                    description: Not found error.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error404Response"
                503:
                    description: Please try again in a few minutes. If the issue still persists, contact Crossmint support.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error503Response"
                524:
                    description: A timeout occurred.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error524Response"

    /2022-06-09/orders/{orderId}:
        # GET ORDER
        get:
            summary: Get Order
            description: Get specific order by ID
            operationId: get-order
            security:
                - apiKey: []
                - orderClientSecret: []
            tags:
                - Headless
            x-fern-sdk-group-name: checkout
            parameters:
                - $ref: "#/components/parameters/orderId"
            responses:
                200:
                    description: "Order successfully created."
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/OrderObject"
                400:
                    description: Invalid arguments, please make sure you're following the api specification.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error400Response"
                403:
                    description: Forbidden error, please ensure the credentials are correct.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error403Response"
                404:
                    description: Not found error.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error404Response"
                503:
                    description: Please try again in a few minutes. If the issue still persists, contact Crossmint support.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error503Response"
                524:
                    description: A timeout occurred.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error524Response"

        # EDIT ORDER
        patch:
            summary: Edit Order
            description: >-
                Edit an existing order. You can update the recipient, the payment
                method, and/or the locale.
            operationId: edit-order
            security:
                - apiKey: []
                - orderClientSecret: []
            tags:
                - Headless
            x-fern-sdk-group-name: checkout
            parameters:
                - $ref: "#/components/parameters/orderId"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/OrderDTO"
            responses:
                200:
                    description: "Order successfully created."
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/OrderObject"
                400:
                    description: Invalid arguments, please make sure you're following the api specification.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error400Response"
                403:
                    description: Forbidden error, please ensure the credentials are correct.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error403Response"
                404:
                    description: Not found error.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error404Response"
                503:
                    description: Please try again in a few minutes. If the issue still persists, contact Crossmint support.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error503Response"
                524:
                    description: A timeout occurred.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error524Response"

components:
    securitySchemes:
        apiKey:
            type: apiKey
            name: X-API-KEY
            in: header
        orderClientSecret:
            type: apiKey
            name: Authorization
            in: header

    parameters:
        orderId:
            name: orderId
            in: path
            description: |
                This is the identifier for the order with UUID format.

                **Example:** `9c82ef99-617f-497d-9abb-fd355291681b`
            required: true
            schema:
                type: string

    schemas:
        ################################################
        ### REQUEST BODY SCHEMAS
        ################################################

        OrderDTO:
            type: object
            additionalProperties: false
            properties:
                recipient:
                    $ref: "#/components/schemas/Recipient"
                locale:
                    $ref: "#/components/schemas/Locale"
                payment:
                    $ref: "#/components/schemas/Payment"

        Recipient:
            oneOf:
                - type: object
                  title: Email
                  properties:
                      email:
                          type: string
                          format: email
                  required:
                      - email
                  additionalProperties: false
                  description: >-
                      Recipient of the items being purchased. Crossmint will create a custodial wallet address for
                      the user on the fly, that they can later log in to. If no recipient
                      is passed, an order will be created with the status
                      'requires-recipient', until you pass one.
                - type: object
                  title: Wallet
                  properties:
                      walletAddress:
                          type: string
                  required:
                      - walletAddress
                  additionalProperties: false
                  description: >-
                      Recipient of the items being purchased. If specifying a recipient by wallet address,
                      ensure the address is valid for the chain your **collection** is on,
                      which may differ from the chain the payment is performed on.
        Locale:
            default: en-US
            type: string
            enum:
                - en-US
                - es-ES
                - fr-FR
                - it-IT
                - ko-KR
                - pt-PT
                - ja-JP
                - zh-CN
                - zh-TW
                - de-DE
                - ru-RU
                - tr-TR
                - uk-UA
                - th-TH
                - vi-VN
                - Klingon
            example: en-US
            description: >-
                Locale for the checkout, in IETF BCP 47. It impacts the email
                receipt language. Ensure your UI is set to the same language as
                specified here. Throws an error if passed an invalid language.

        Payment:
            discriminator:
                propertyName: method
            oneOf:
                - type: object
                  title: EVM
                  x-fern-type-name: EvmPayment
                  additionalProperties: false
                  properties:
                      receiptEmail:
                          type: string
                          format: email
                          description: Email that the receipt will be sent to.
                      method:
                          x-fern-type-name: EvmPaymentMethods
                          type: string
                          enum:
                              - arbitrum-sepolia
                              - base-sepolia
                              - ethereum-sepolia
                              - optimism-sepolia
                              - arbitrum
                              - bsc
                              - ethereum
                              - optimism
                      currency:
                          x-fern-type-name: EvmPaymentCurrency
                          type: string
                          enum:
                              - eth
                              - usdc
                              - degen
                              - brett
                              - toshi
                      payerAddress:
                          type: string
                          pattern: ^0x[0-9a-fA-F]{40}$
                          description: An EVM wallet address.
                  required:
                      - method
                      - currency
                - type: object
                  title: Solana
                  x-fern-type-name: SolanaPayment
                  additionalProperties: false
                  properties:
                      receiptEmail:
                          type: string
                          format: email
                          description: Email that the receipt will be sent to.
                      method:
                          x-fern-type-name: SolanaPaymentMethods
                          type: string
                          enum:
                              - solana
                      currency:
                          x-fern-type-name: SolanaPaymentCurrency
                          type: string
                          enum:
                              - sol
                              - usdc
                              - bonk
                              - wif
                              - mother
                      payerAddress:
                          type: string
                          pattern: ^[1-9A-HJ-NP-Za-km-z]{32,44}$
                          description: A Solana public key.
                  required:
                      - method
                      - currency
                - type: object
                  title: Fiat
                  x-fern-type-name: FiatPayment
                  additionalProperties: false
                  properties:
                      receiptEmail:
                          type: string
                          format: email
                          description: Email that the receipt will be sent to.
                      method:
                          type: string
                          enum:
                              - stripe-payment-element
                      currency:
                          default: usd
                          type: string
                          x-fern-type-name: FiatPaymentCurrency    
                          enum:
                              - usd
                              - eur
                              - aud
                              - gbp
                              - jpy
                              - sgd
                              - hkd
                              - krw
                              - inr
                              - vnd
                  required:
                      - method
        LineItems:
            oneOf:
                - type: object
                  x-fern-type-name: SingleLineItem
                  title: Single Line Item
                  additionalProperties: false
                  properties:
                      collectionLocator:
                          description: >-
                              The collection locator of the line item. For example: 
                              'crossmint:<collectionId>'. These fields can be retrieved
                              from the Crossmint console.
                          type: string
                          example: crossmint:<collectionId>
                      callData:
                          type: object
                          additionalProperties: {}
                          description: Information that you pass to your contract mint function.
                          properties:
                              totalPrice:
                                  description: >-
                                      The total price of the line item. It must be the same as the
                                      contract expects to receive. Read
                                      https://docs.crossmint.com/nft-checkout/advanced/component-properties#mintconfig
                                  type: string
                  required:
                      - collectionLocator
                - type: array
                  title: Multiple Line Items
                  x-fern-type-name: MultipleLineItems
                  items:
                      type: object
                      additionalProperties: false
                      properties:
                          collectionLocator:
                              description: >-
                                  The collection locator of the line item. Eg.
                                  'crossmint:<projectId>:<collectionId>',
                                  'crossmint:<collectionId>'. These fields can be retrieved
                                  from the Crossmint console.
                              type: string
                          callData:
                              type: object
                              additionalProperties: {}
                              description: Information that you pass to your contract mint function.
                              properties:
                                  totalPrice:
                                      description: >-
                                          The total price of the line item. It must be the same as
                                          the contract expects to receive. Read
                                          https://docs.crossmint.com/nft-checkout/advanced/component-properties#mintconfig
                                      type: string
                      required:
                          - collectionLocator

        ################################################
        ### RESPONSE OBJECTS
        ################################################

        CreateOrderResponse:
            type: object
            properties:
                clientSecret:
                    type: string
                    description: >-
                        A token exclusively scoped to a particular order, allowing for the reading or updating of that order.
                    example: "_removed_"
                order:
                    $ref: "#/components/schemas/OrderObject"

        OrderObject:
            type: object
            properties:
                orderId:
                    type: string
                    example: "b2959ca5-65e4-466a-bd26-1bd05cb4f837"
                phase:
                    type: string
                    example: "payment"
                locale:
                    type: string
                    example: "en-US"
                lineItems:
                    type: array
                    items:
                        type: object
                        properties:
                            chain:
                                type: string
                                example: "polygon-amoy"
                            quantity:
                                type: number
                                example: 1
                            callData:
                                type: object
                                properties:
                                    quantity:
                                        type: number
                                        example: 1
                                    ADDITIONAL_PROPERTIES:
                                        type: string
                                        example: "Your other mint function arguments"
                            metadata:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        example: "Headless Checkout Demo"
                                    description:
                                        type: string
                                        example: "NFT Description"
                                    imageUrl:
                                        type: string
                                        example: "https://cdn.io/image.png"
                            quote:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "valid"
                                    charges:
                                        type: object
                                        properties:
                                            unit:
                                                type: object
                                                properties:
                                                    amount:
                                                        type: string
                                                        example: "0.0001"
                                                    currency:
                                                        type: string
                                                        example: "eth"
                                    totalPrice:
                                        type: object
                                        properties:
                                            amount:
                                                type: string
                                                example: "0.0001"
                                            currency:
                                                type: string
                                                example: "eth"
                            delivery:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "awaiting-payment"
                                    recipient:
                                        type: object
                                        properties:
                                            locator:
                                                type: string
                                                example: "email:<email_address>:<chain>"
                                            email:
                                                type: string
                                                example: "testy@crossmint.com"
                                            walletAddress:
                                                type: string
                                                example: "0x1234abcd..."
                quote:
                    type: object
                    properties:
                        status:
                            type: string
                            example: "valid"
                        quotedAt:
                            type: string
                            example: "2024-06-07T16:55:44.653Z"
                        expiresAt:
                            type: string
                            example: "2024-06-07T17:55:44.653Z"
                        totalPrice:
                            type: object
                            properties:
                                amount:
                                    type: string
                                    example: "0.0001375741"
                                currency:
                                    type: string
                                    example: "eth"
                payment:
                    type: object
                    properties:
                        status:
                            type: string
                            example: "awaiting-payment"
                        method:
                            type: string
                            example: "base-sepolia"
                        currency:
                            type: string
                            example: "eth"
                        preparation:
                            type: object
                            properties:
                                chain:
                                    type: string
                                    example: "base-sepolia"
                                payerAddress:
                                    type: string
                                    example: "0x1234abcd..."
                                serializedTransaction:
                                    type: string
                                    example: "0x02f90....."

        Error400Response:
            type: object
            properties:
                error:
                    type: boolean
                    example: true
                message:
                    type: string
                    example: "Invalid arguments or empty parameter <missing parameter>."

        Error403Response:
            type: object
            properties:
                error:
                    type: boolean
                    example: true
                message:
                    type: string
                    example: Malformed API key. / API key provided doesn't have required scopes.

        Error404Response:
            type: object
            properties:
                error:
                    type: boolean
                    example: true
                message:
                    type: string
                    example: "Not found"

        Error503Response:
            type: object
            properties:
                error:
                    type: boolean
                    example: true
                message:
                    type: string
                    example: "Please try again in a few minutes. If the issue still persists, contact Crossmint support."

        Error524Response:
            x-fern-type-name: TimeoutResponse
            type: object
            properties:
                error:
                    type: boolean
                    example: true
                message:
                    type: string
                    example: "A timeout occurred."
